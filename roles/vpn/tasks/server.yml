---
# tasks
- name: install (pexpect) python package
  pip:
    name: pexpect
    state: present
  become: True
  tags: ovpn_init, server_init


- name: pull image
  docker_image:
    name: "kylemanna/openvpn"
    tag: latest
    state: present
  tags: ovpn_init, server_init


- name: stop and remove existing openvpn container
  command: "{{ item }}"
  with_items:
    - "docker stop {{ ovpn_server_container_name }}"
    - "docker rm -v {{ ovpn_server_container_name }}"
    - "docker volume rm {{ ovpn_data }}"
  ignore_errors: yes
  tags: ovpn_init, server_init


- name: creation volume
  command: "docker volume create --name {{ ovpn_data }}"
  tags: ovpn_init, server_init


- name: generate OpenVPN configs
  docker_container:
    name: vpn-genconfig
    image: "kylemanna/openvpn"
    detach: no
    cleanup: yes
    volumes:
      - "{{ ovpn_data }}:/etc/openvpn"
    command: "ovpn_genconfig -u udp://{{ ovpn_url }} {{ ovpn_genconfig_additional_parameters }}"
  tags: ovpn_init, server_init


- name: initialize the EasyRSA PKI
  expect:
    command: docker run -v {{ ovpn_data }}:/etc/openvpn --rm -ti --name vpn-initpki kylemanna/openvpn ovpn_initpki
    responses:
      (?i)confirm removal: "yes"
      (?i)pem pass phrase: "{{ ovpn_initpki_passphrase }}"
      (?i)common name: "{{ ovpn_initpki_common_name }}"
      (?i)enter pass phrase for: "{{ ovpn_initpki_passphrase }}"
    timeout: 300
  tags: ovpn_init, server_init


- name: run container
  docker_container:
    name: {{ ovpn_server_container_name }}
    image: "kylemanna/openvpn"
    volumes:
      - "{{ ovpn_data }}:/etc/openvpn"
    detach: yes
    ports:
      - "1194:1194/udp"
    capabilities: "NET_ADMIN"
  tags: ovpn_init, server_init


- name: build client certs
  expect:
    command: docker run -v {{ ovpn_data }}:/etc/openvpn --rm -ti --name vpn-buildcerts kylemanna/openvpn easyrsa build-client-full {{ ovpn_client_name }} nopass
    responses:
      (?i)enter pass phrase for: "{{ ovpn_initpki_passphrase }}"
    timeout: 60
  tags: ovpn_init, server_init


- name: fix client addresses (tun0)
  shell: "echo 'ifconfig-push {{ ovpn_client_tun0_inet }} {{ ovpn_client_tun0_ptp }}' | docker run -v {{ ovpn_data }}:/etc/openvpn -i --rm kylemanna/openvpn tee /etc/openvpn/ccd/{{ ovpn_client_name }}"
  tags: ovpn_init, server_init


- name: get client configuration
  command: docker run -v {{ ovpn_data }}:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient {{ ovpn_client_name }}
  register: ovpn_server_secret_result
  tags: ovpn_init, server_init, client_init


# - debug: msg="{{ ovpn_server_secret_result.stdout }}"
#   tags: ovpn_init, server_init, client_init


#- name: get client conf locally
#  local_action: copy content="{{ ovpn_server_secret_result.stdout }}" dest="/tmp/{{ ovpn_client_name }}.ovpn"
#  tags: ovpn_init, server_init, client_init


- name: stop and remove container
  docker_container:
    name: "{{ ovpn_server_container_name }}"
    image: "kylemanna/openvpn"
    state: absent
  tags: ovpn_remove
